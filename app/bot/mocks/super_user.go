// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// SuperUser is an autogenerated mock type for the SuperUser type
type SuperUser struct {
	mock.Mock
}

// IsSuper provides a mock function with given fields: userName
func (_m *SuperUser) IsSuper(userName string) bool {
	ret := _m.Called(userName)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(userName)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewSuperUser interface {
	mock.TestingT
	Cleanup(func())
}

// NewSuperUser creates a new instance of SuperUser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSuperUser(t mockConstructorTestingTNewSuperUser) *SuperUser {
	mock := &SuperUser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
